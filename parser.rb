#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.10
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require "lexer"
  require "nodes"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 155)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.run(code)
    p @tokens if show_tokens
    do_parse
  end
  
  def next_token
    @tokens.shift
  end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    22,    45,    24,    47,    19,    20,    24,    12,    13,    14,
    15,    16,    17,    21,    19,    20,    18,    12,    13,    14,
    15,    16,    17,    21,    44,    43,    18,    25,    64,    26,
    41,    25,    11,    40,    69,    24,    24,    68,    71,    26,
    19,    20,    11,    12,    13,    14,    15,    16,    17,    21,
    19,    20,    18,    12,    13,    14,    15,    16,    17,    21,
    25,    25,    18,    26,    82,    37,    38,    26,    11,    37,
    38,    35,    36,    26,    67,   nil,    19,    20,    11,    12,
    13,    14,    15,    16,    17,    21,    19,    20,    18,    12,
    13,    14,    15,    16,    17,    21,   nil,    26,    18,    37,
    38,    35,    36,    26,    11,    37,    38,    35,    36,   nil,
   nil,   nil,    19,    20,    11,    12,    13,    14,    15,    16,
    17,    21,    19,    20,    18,    12,    13,    14,    15,    16,
    17,    21,   nil,    26,    18,    37,    38,    35,    36,    69,
    11,    26,    80,    37,    38,   nil,   nil,   nil,    19,    20,
    11,    12,    13,    14,    15,    16,    17,    21,    19,    20,
    18,    12,    13,    14,    15,    16,    17,    21,    77,   nil,
    18,    76,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    19,    20,    11,    12,    13,    14,
    15,    16,    17,    21,    19,    20,    18,    12,    13,    14,
    15,    16,    17,    21,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,    20,    11,    12,    13,    14,    15,    16,    17,    21,
    19,    20,    18,    12,    13,    14,    15,    16,    17,    21,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,    11,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    20,    11,    12,
    13,    14,    15,    16,    17,    21,    19,    20,    18,    12,
    13,    14,    15,    16,    17,    21,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    19,    20,    11,    12,    13,    14,    15,    16,
    17,    21,    19,    20,    18,    12,    13,    14,    15,    16,
    17,    21,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,
    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,    20,
    11,    12,    13,    14,    15,    16,    17,    21,    19,    20,
    18,    12,    13,    14,    15,    16,    17,    21,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    19,    20,    11,    12,    13,    14,
    15,    16,    17,    21,    19,    20,    18,    12,    13,    14,
    15,    16,    17,    21,   nil,    24,    18,   nil,    24,    24,
   nil,   nil,    11,    79,   nil,   nil,    78,    84,   nil,   nil,
    19,    20,    11,    12,    13,    14,    15,    16,    17,    21,
    25,   nil,    18,    25,    25,    26,   nil,    37,    38,    35,
    36,    31,    32,    33,    34,    29,    30,    26,    11,    37,
    38,    35,    36,    31,    32,    33,    34,    29,    30,    28,
    27,   nil,   nil,   nil,    26,    60,    37,    38,    35,    36,
    31,    32,    33,    34,    29,    30,    28,    27,    26,   nil,
    37,    38,    35,    36,    31,    32,    33,    34,    29,    30,
    28,    27,    26,   nil,    37,    38,    35,    36,    31,    32,
    33,    34,    29,    30,    28,    27,    26,   nil,    37,    38,
    35,    36,    31,    32,    33,    34,    29,    30,    28,    27,
    26,   nil,    37,    38,    35,    36,    31,    32,    33,    34,
    29,    30,    28,    27,    26,   nil,    37,    38,    35,    36,
    31,    32,    33,    34,    29,    30,    28,    26,   nil,    37,
    38,    35,    36,    31,    32,    33,    34,    26,   nil,    37,
    38,    35,    36,    31,    32,    33,    34 ]

racc_action_check = [
     1,    22,    43,    26,    27,    27,     1,    27,    27,    27,
    27,    27,    27,    27,    81,    81,    27,    81,    81,    81,
    81,    81,    81,    81,    20,    19,    81,    43,    43,    42,
    17,     1,    27,    17,    61,    76,    44,    61,    64,    58,
    11,    11,    81,    11,    11,    11,    11,    11,    11,    11,
    65,    65,    11,    65,    65,    65,    65,    65,    65,    65,
    76,    44,    65,    56,    77,    56,    56,    53,    11,    53,
    53,    53,    53,    59,    47,   nil,    18,    18,    65,    18,
    18,    18,    18,    18,    18,    18,    41,    41,    18,    41,
    41,    41,    41,    41,    41,    41,   nil,    54,    41,    54,
    54,    54,    54,    55,    18,    55,    55,    55,    55,   nil,
   nil,   nil,    40,    40,    41,    40,    40,    40,    40,    40,
    40,    40,    69,    69,    40,    69,    69,    69,    69,    69,
    69,    69,   nil,    52,    69,    52,    52,    52,    52,    74,
    40,    57,    74,    57,    57,   nil,   nil,   nil,    23,    23,
    69,    23,    23,    23,    23,    23,    23,    23,    67,    67,
    23,    67,    67,    67,    67,    67,    67,    67,    70,   nil,
    67,    70,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     0,     0,    67,     0,     0,     0,
     0,     0,     0,     0,    28,    28,     0,    28,    28,    28,
    28,    28,    28,    28,   nil,   nil,    28,   nil,   nil,   nil,
   nil,   nil,     0,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    29,    29,    28,    29,    29,    29,    29,    29,    29,    29,
    66,    66,    29,    66,    66,    66,    66,    66,    66,    66,
   nil,   nil,    66,   nil,   nil,   nil,   nil,   nil,    29,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    31,    31,    66,    31,
    31,    31,    31,    31,    31,    31,    32,    32,    31,    32,
    32,    32,    32,    32,    32,    32,   nil,   nil,    32,   nil,
   nil,   nil,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    33,    33,    32,    33,    33,    33,    33,    33,
    33,    33,    34,    34,    33,    34,    34,    34,    34,    34,
    34,    34,   nil,   nil,    34,   nil,   nil,   nil,   nil,   nil,
    33,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    35,    35,
    34,    35,    35,    35,    35,    35,    35,    35,    36,    36,
    35,    36,    36,    36,    36,    36,    36,    36,   nil,   nil,
    36,   nil,   nil,   nil,   nil,   nil,    35,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    37,    37,    36,    37,    37,    37,
    37,    37,    37,    37,    38,    38,    37,    38,    38,    38,
    38,    38,    38,    38,   nil,    73,    38,   nil,    72,    83,
   nil,   nil,    37,    73,   nil,   nil,    72,    83,   nil,   nil,
    30,    30,    38,    30,    30,    30,    30,    30,    30,    30,
    73,   nil,    30,    72,    83,    49,   nil,    49,    49,    49,
    49,    49,    49,    49,    49,    49,    49,    39,    30,    39,
    39,    39,    39,    39,    39,    39,    39,    39,    39,    39,
    39,   nil,   nil,   nil,    75,    39,    75,    75,    75,    75,
    75,    75,    75,    75,    75,    75,    75,    75,     2,   nil,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,    63,   nil,    63,    63,    63,    63,    63,    63,
    63,    63,    63,    63,    63,    63,    62,   nil,    62,    62,
    62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
    46,   nil,    46,    46,    46,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    48,   nil,    48,    48,    48,    48,
    48,    48,    48,    48,    48,    48,    48,    50,   nil,    50,
    50,    50,    50,    50,    50,    50,    50,    51,   nil,    51,
    51,    51,    51,    51,    51,    51,    51 ]

racc_action_pointer = [
   180,     0,   443,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    36,   nil,   nil,   nil,   nil,   nil,     1,    72,    13,
    11,   nil,     1,   144,   nil,   nil,    -9,     0,   190,   216,
   396,   252,   262,   288,   298,   324,   334,   360,   370,   412,
   108,    82,    14,    -4,    30,   nil,   485,    42,   499,   400,
   512,   522,   118,    52,    82,    88,    48,   126,    24,    58,
   nil,     4,   471,   457,    26,    46,   226,   154,   nil,   118,
   138,   nil,   382,   379,   109,   429,    29,    52,   nil,   nil,
   nil,    10,   nil,   383,   nil ]

racc_action_default = [
    -3,   -49,    -1,    -7,    -8,    -9,   -10,   -11,   -12,   -13,
   -14,   -49,   -16,   -17,   -18,   -19,   -20,   -40,   -49,   -49,
   -49,   -48,   -49,    -4,    -5,    -6,   -49,   -49,   -49,   -49,
   -49,   -49,   -49,   -49,   -49,   -49,   -49,   -49,   -49,   -49,
   -26,   -49,   -39,   -49,   -49,    85,    -2,   -23,   -27,   -28,
   -29,   -30,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,
   -15,   -49,   -24,   -41,   -46,    -3,    -3,   -26,   -21,   -49,
   -49,   -44,   -49,   -49,   -49,   -25,   -49,   -49,   -43,   -47,
   -22,    -3,   -45,   -49,   -42 ]

racc_goto_table = [
     1,    39,    65,    66,    70,    61,   nil,   nil,    42,   nil,
   nil,   nil,   nil,    46,   nil,   nil,   nil,    48,    49,    50,
    51,    52,    53,    54,    55,    56,    57,    58,    59,   nil,
    62,    63,    74,   nil,   nil,    81,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    62,   nil,    75,
   nil,   nil,   nil,   nil,   nil,    72,    73,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    83 ]

racc_goto_check = [
     1,     2,     3,     3,    13,    12,   nil,   nil,     2,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,   nil,
     2,     2,    12,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,     2,
   nil,   nil,   nil,   nil,   nil,     1,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     1 ]

racc_goto_pointer = [
   nil,     0,   -10,   -41,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -35,   -60 ]

racc_goto_default = [
   nil,   nil,     2,    23,     3,     4,     5,     6,     7,     8,
     9,    10,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 35, :_reduce_1,
  3, 35, :_reduce_2,
  0, 35, :_reduce_3,
  2, 35, :_reduce_4,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 36, :_reduce_15,
  1, 38, :_reduce_16,
  1, 38, :_reduce_17,
  1, 38, :_reduce_18,
  1, 38, :_reduce_19,
  1, 38, :_reduce_20,
  4, 39, :_reduce_21,
  6, 39, :_reduce_22,
  3, 39, :_reduce_23,
  1, 46, :_reduce_24,
  3, 46, :_reduce_25,
  0, 46, :_reduce_26,
  3, 40, :_reduce_27,
  3, 40, :_reduce_28,
  3, 40, :_reduce_29,
  3, 40, :_reduce_30,
  3, 40, :_reduce_31,
  3, 40, :_reduce_32,
  3, 40, :_reduce_33,
  3, 40, :_reduce_34,
  3, 40, :_reduce_35,
  3, 40, :_reduce_36,
  3, 40, :_reduce_37,
  3, 40, :_reduce_38,
  2, 40, :_reduce_39,
  1, 42, :_reduce_40,
  3, 43, :_reduce_41,
  8, 44, :_reduce_42,
  5, 44, :_reduce_43,
  1, 47, :_reduce_44,
  3, 47, :_reduce_45,
  0, 47, :_reduce_46,
  5, 45, :_reduce_47,
  1, 41, :_reduce_48 ]

racc_reduce_n = 49

racc_shift_n = 85

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :DEF => 4,
  :CLASS => 5,
  :NEWLINE => 6,
  :NUMBER => 7,
  :STRING => 8,
  :TRUE => 9,
  :FALSE => 10,
  :NIL => 11,
  :IDENTIFIER => 12,
  :CONSTANT => 13,
  :END => 14,
  "." => 15,
  "!" => 16,
  "*" => 17,
  "/" => 18,
  "+" => 19,
  "-" => 20,
  ">" => 21,
  ">=" => 22,
  "<" => 23,
  "<=" => 24,
  "==" => 25,
  "!=" => 26,
  "&&" => 27,
  "||" => 28,
  "=" => 29,
  "," => 30,
  ";" => 31,
  "(" => 32,
  ")" => 33 }

racc_nt_base = 34

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "END",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "GetConstant",
  "GetLocal",
  "SetLocal",
  "Def",
  "Class",
  "Arguments",
  "Parameters" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 45)
  def _reduce_1(val, _values, result)
     result = Nodes.new([ val[0] ]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_2(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_3(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'grammar.y', 65)
  def _reduce_15(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 69)
  def _reduce_16(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 70)
  def _reduce_17(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 71)
  def _reduce_18(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 72)
  def _reduce_19(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 73)
  def _reduce_20(val, _values, result)
     result = NilNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 78)
  def _reduce_21(val, _values, result)
     result = CallNode.new(nil, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 81)
  def _reduce_22(val, _values, result)
     result = CallNode.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 82)
  def _reduce_23(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 86)
  def _reduce_24(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_25(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 88)
  def _reduce_26(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 95)
  def _reduce_28(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 96)
  def _reduce_29(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_30(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_31(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 99)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 100)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 101)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[1], val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 114)
  def _reduce_40(val, _values, result)
     result = GetLocalNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_41(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_42(val, _values, result)
     result = DefNode.new(val[1], val[3], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 127)
  def _reduce_43(val, _values, result)
     result = DefNode.new(val[1], [], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 131)
  def _reduce_44(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 132)
  def _reduce_45(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_46(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 140)
  def _reduce_47(val, _values, result)
     result = ClassNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_48(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
